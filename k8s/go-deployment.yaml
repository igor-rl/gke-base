apiVersion: apps/v1
kind: Deployment
metadata:
  name: goserver
  labels:
    app: goserver
spec:
  selector:
    matchLabels:
      app: goserver    
  replicas: 1
  template:
    metadata:
      labels:
        app: "goserver"
    spec:
      containers:
        - name: goserver
          image: "igorlage/hello-go:v9.0.2"
          
          resources:
            requests: 
              cpu: "0.05"
              memory: 20Mi
            limits:
              cpu: "0.05"
              memory: 25Mi

          startupProbe: # verifica a cada x segundos se a aplicação subiu, se sim, continua, para readinessProbe e livenessProbe
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 3 # verificação por x segundos
            failureThreshold: 1 # reiniciar o container em x retornos de erro
          
          readinessProbe:  # verificar se aplicação está pronta
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 3 # verificação de quanto em quanto tempo?
            failureThreshold: 1 # reiniciar o container a partir de quantos retornos de erro
            timeoutSeconds: 1 # tempo limite para retornar um erro de timeout

          livenessProbe: # verificar se a apliucação está funcionando
            httpGet:
              path: /healthz
              port: 80
            periodSeconds: 5 # verificação de quanto em quanto tempo?
            failureThreshold: 1 # reiniciar o container a partir de quantos retornos de erro
            timeoutSeconds: 1 # tempo limite para retornar um erro de timeout
            successThreshold: 1 # quantidade de testes

          envFrom:
            - configMapRef:
                name: goserver-env
            - secretRef:
                name: goserver-secret

          volumeMounts:
            - mountPath: "/go/myfamily"
              name: config
              readOnly: true
            - mountPath: "/go/pvc"
              name: goserver-volume

      volumes:
        - name: goserver-volume
          persistentVolumeClaim:
            claimName: goserver-pvc

        - name: config
          configMap:
            name: configmap-family
            items:
            - key: members
              path: "family.txt"  

